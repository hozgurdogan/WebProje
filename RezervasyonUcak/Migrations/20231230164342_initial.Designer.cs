// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RezervasyonUcak.Areas.Employees.Models;

#nullable disable

namespace RezervasyonUcak.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231230164342_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Bilet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("BiletFiyat")
                        .HasColumnType("double precision");

                    b.Property<bool>("IptalMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("KesimTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("KoltukId")
                        .HasColumnType("integer");

                    b.Property<int?>("MusteriId")
                        .HasColumnType("integer");

                    b.Property<int>("MusteriId1")
                        .HasColumnType("integer");

                    b.Property<int>("UcusSeferUcusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KoltukId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("MusteriId1");

                    b.HasIndex("UcusSeferUcusId");

                    b.ToTable("Bilets");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Firma", b =>
                {
                    b.Property<int>("FirmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FirmaId"));

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FirmaId");

                    b.ToTable("Firma");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Koltuk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("DoluMu")
                        .HasColumnType("boolean");

                    b.Property<string>("KoltukNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UcakId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UcakId");

                    b.ToTable("Koltuk");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Ucak", b =>
                {
                    b.Property<int>("UcakId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UcakId"));

                    b.Property<int>("FirmaId")
                        .HasColumnType("integer");

                    b.Property<int>("KoltukSayisi")
                        .HasColumnType("integer");

                    b.Property<string>("ModelNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UcakId");

                    b.HasIndex("FirmaId");

                    b.ToTable("Ucak");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.UcusKonum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BaslangicKonum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TarihId")
                        .HasColumnType("integer");

                    b.Property<string>("VarisKonum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TarihId");

                    b.ToTable("UcusKonum");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.UcusSefer", b =>
                {
                    b.Property<int>("UcusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UcusId"));

                    b.Property<string>("BaslangicSaat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UcakId")
                        .HasColumnType("integer");

                    b.Property<double>("UcusFiyat")
                        .HasColumnType("double precision");

                    b.Property<int>("UcusKonumId")
                        .HasColumnType("integer");

                    b.Property<string>("VarisSaati")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UcusId");

                    b.HasIndex("UcakId");

                    b.HasIndex("UcusKonumId");

                    b.ToTable("UcusSefers");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.UcusTarih", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("UcusTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Tarih");
                });

            modelBuilder.Entity("RezervasyonUcak.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Bilet", b =>
                {
                    b.HasOne("RezervasyonUcak.Areas.Employees.Models.Koltuk", "Koltuk")
                        .WithMany()
                        .HasForeignKey("KoltukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RezervasyonUcak.Areas.Employees.Models.Musteri", null)
                        .WithMany("Biletler")
                        .HasForeignKey("MusteriId");

                    b.HasOne("RezervasyonUcak.Models.User", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RezervasyonUcak.Areas.Employees.Models.UcusSefer", "UcusSefer")
                        .WithMany()
                        .HasForeignKey("UcusSeferUcusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Koltuk");

                    b.Navigation("Musteri");

                    b.Navigation("UcusSefer");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Koltuk", b =>
                {
                    b.HasOne("RezervasyonUcak.Areas.Employees.Models.Ucak", null)
                        .WithMany("Koltuklar")
                        .HasForeignKey("UcakId");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Musteri", b =>
                {
                    b.HasOne("RezervasyonUcak.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Ucak", b =>
                {
                    b.HasOne("RezervasyonUcak.Areas.Employees.Models.Firma", "Firma")
                        .WithMany("Ucaklar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.UcusKonum", b =>
                {
                    b.HasOne("RezervasyonUcak.Areas.Employees.Models.UcusTarih", "Tarih")
                        .WithMany("Konumlar")
                        .HasForeignKey("TarihId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarih");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.UcusSefer", b =>
                {
                    b.HasOne("RezervasyonUcak.Areas.Employees.Models.Ucak", "Ucak")
                        .WithMany()
                        .HasForeignKey("UcakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RezervasyonUcak.Areas.Employees.Models.UcusKonum", "UcusKonum")
                        .WithMany("Seferler")
                        .HasForeignKey("UcusKonumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ucak");

                    b.Navigation("UcusKonum");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Firma", b =>
                {
                    b.Navigation("Ucaklar");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Musteri", b =>
                {
                    b.Navigation("Biletler");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.Ucak", b =>
                {
                    b.Navigation("Koltuklar");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.UcusKonum", b =>
                {
                    b.Navigation("Seferler");
                });

            modelBuilder.Entity("RezervasyonUcak.Areas.Employees.Models.UcusTarih", b =>
                {
                    b.Navigation("Konumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
